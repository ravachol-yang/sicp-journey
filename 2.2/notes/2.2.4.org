#+title: 2.2.4Example: A Picture Language
#+author: Ravachol <ravachol.yang@gmail.com>

* The picture language

the drawing of a painter called wave4 that is built up in two stages starting from wave: 

#+begin_src racket
(define wave2 (beside wave (flip-vert wave)))
(define wave4 (below wave2 wave2))
#+end_src

abstract the pattern

#+begin_src racket
(define (flipped-pairs painter)
  (let ((painter2 
         (beside painter 
                 (flip-vert painter))))
    (below painter2 painter2)))
#+end_src

recursive operations

#+begin_src racket
(define (right-split painter n)
  (if (= n 0)
      painter
      (let ((smaller (right-split painter 
                                  (- n 1))))
        (beside painter 
                (below smaller smaller)))))
#+end_src
